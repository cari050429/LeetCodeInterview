class MyQueue:

    def __init__(self):
        self.right_stack=[]
        self.left_stack=[]
        

    def push(self, x: int) -> None:
        self.right_stack.append(x)

        while len(self.left_stack)!=0:
            self.left_stack.pop()
        temp_stack=[]
        for x in self.right_stack:
            temp_stack.append(x)
        while len(temp_stack)>0:
            self.left_stack.append(temp_stack.pop())
        print(self.left_stack)
        
    def pop(self) -> int:
        
        x=self.left_stack.pop()
        while len(self.right_stack)!=0:
            self.right_stack.pop()
        temp_stack=[]
        for z in self.left_stack:
            temp_stack.append(z)
        while len(temp_stack)>0:
            self.right_stack.append(temp_stack.pop())
        print(self.left_stack)
        return x

    def peek(self) -> int:
        return self.left_stack[-1]

    def empty(self) -> bool:
        if self.left_stack: 
            return False
        else:
            return True
        


# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
